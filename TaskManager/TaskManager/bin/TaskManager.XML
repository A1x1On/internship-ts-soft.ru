<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TaskManager</name>
    </assembly>
    <members>
        <member name="T:TaskManager.App_Start.UnityConfig">
            <summary>
            Specifies the Unity configuration for the main container.
            </summary>
        </member>
        <member name="M:TaskManager.App_Start.UnityConfig.GetConfiguredContainer">
            <summary>
            Gets the configured Unity container.
            </summary>
        </member>
        <member name="M:TaskManager.App_Start.UnityConfig.RegisterTypes(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>Registers the type mappings with the Unity container.</summary>
            <param name="container">The unity container to configure.</param>
            <remarks>There is no need to register concrete types such as controllers or API controllers (unless you want to 
            change the defaults), as Unity allows resolving a concrete type even if it was not previously registered.</remarks>
        </member>
        <member name="T:TaskManager.App_Start.UnityWebActivator">
            <summary>Provides the bootstrapping for integrating Unity with ASP.NET MVC.</summary>
        </member>
        <member name="M:TaskManager.App_Start.UnityWebActivator.Start">
            <summary>Integrates Unity when the application starts.</summary>
        </member>
        <member name="M:TaskManager.App_Start.UnityWebActivator.Shutdown">
            <summary>Disposes the Unity container when the application is shut down.</summary>
        </member>
        <member name="F:TaskManager.Controllers.AccountController.m_ResultMassage">
            <summary>
            Message: Error Capcha
            </summary>
        </member>
        <member name="F:TaskManager.Controllers.AccountController.m_Relize">
            <summary>
            Instance RealizeAccount : IAccount is
            </summary>
        </member>
        <member name="M:TaskManager.Controllers.AccountController.Index">
            <summary>
            Checking of Authorized User
            </summary>
            <returns>View Index/Manager or View Index/Account</returns>
        </member>
        <member name="M:TaskManager.Controllers.AccountController.Registration">
            <summary>
            Registration View
            </summary>
            <returns>View Registration/Account</returns>
        </member>
        <member name="M:TaskManager.Controllers.AccountController.Registration(TaskManager.USERS)">
            <summary>
            Registration of User [HttpPost]
            </summary>
            <param name="Person">Object of data register</param>
            <returns>View Index/Manager</returns>
        </member>
        <member name="M:TaskManager.Controllers.AccountController.ConfirMail(System.String,System.String)">
            <summary>
            Confirming of Account via own Email
            </summary>
            <param name="code">Crypt password from user's email</param>
            <param name="l">Login of User</param>
            <returns>View Index/Manager</returns>
        </member>
        <member name="M:TaskManager.Controllers.AccountController.GetCapthcaImage">
            <summary>
            Drawing of Capcha
            </summary>
            <returns>image of capcha</returns>
        </member>
        <member name="M:TaskManager.Controllers.AccountController.Login(TaskManager.Models.LogIn)">
            <summary>
            Login View [HttpPost]
            </summary>
            <param name="model">Model of project for authorize on the site</param>
            <returns>View Index/Manager or View Index/Account</returns>
        </member>
        <member name="M:TaskManager.Controllers.AccountController.Logout">
            <summary>
            Logout View [HttpPost]
            </summary>
            <returns>View Index/Account</returns>
        </member>
        <member name="F:TaskManager.Controllers.ManagerController.m_Relize">
            <summary>
            Instance RealizeManager : IManager is
            </summary>
        </member>
        <member name="F:TaskManager.Controllers.ManagerController.m_ResultMassage">
            <summary>
            Variable is for User errors on Views
            </summary>
        </member>
        <member name="F:TaskManager.Controllers.ManagerController.m_Login">
            <summary>
            Varible is login Authorized user
            </summary>
        </member>
        <member name="F:TaskManager.Controllers.ManagerController.m_StatusActive">
            <summary>
            Varible is Task Status like "Active status"
            </summary>
        </member>
        <member name="M:TaskManager.Controllers.ManagerController.Index">
            <summary>
            View of Review list of Tasks, way adding of task
            </summary>
            <returns>View Index/Account</returns>
        </member>
        <member name="M:TaskManager.Controllers.ManagerController.Finish(System.Int32)">
            <summary>
            Finishing of task
            </summary>
            <param name="TaskFromFinish">ID of task</param>
            <returns>View Index/Manager</returns>
        </member>
        <member name="M:TaskManager.Controllers.ManagerController.AddChange(TaskManager.Models.TasksAddChangeSelect)">
            <summary>
            Adding and Changing of tasks
            </summary>
            <param name="model">Object of task who ready to add database</param>
            <returns>View Index/Manage</returns>
        </member>
        <member name="M:TaskManager.Controllers.ManagerController.GetTags(System.String)">
            <summary>
            Getting list of Tags with inputed Keyword [AJAX]
            </summary>
            <param name="name">Key word from (text input of class="inputTag")</param>
            <returns>list of received tags</returns>
        </member>
        <member name="M:TaskManager.Controllers.ManagerController.Delete(System.Int32)">
            <summary>
            Removing of tasks [HttpPost] [Ajax]
            </summary>
            <param name="idTask">Id of task</param>
            <returns>Massage of id task on page</returns>
        </member>
        <member name="M:TaskManager.Controllers.ManagerController.OpenTask(System.Int32)">
            <summary>
            Dinamic opening of detail task on the Index page
            </summary>
            <param name="TaskId"></param>
            <returns>Set of property for Angular act</returns>
        </member>
        <member name="M:TaskManager.Realizations.IAccount.UserToDb(TaskManager.USERS)">
            <summary>
            Adding of User to DataBase
            </summary>
            <param name="Person">Object User</param>
            <returns>Massege of success for m_ResultMassage</returns>
        </member>
        <member name="M:TaskManager.Realizations.IAccount.UserConfirm(System.String,System.String)">
            <summary>
            Confirming of user via own Email
            </summary>
            <param name="code">Crypt password from user's email</param>
            <param name="l">Login of User</param>
            <returns>Massege of success for m_ResultMassage</returns>
        </member>
        <member name="M:TaskManager.Realizations.IAccount.UserAuthorisation(TaskManager.Models.LogIn)">
            <summary>
            Conditions are for failed attempt to authorize
            </summary>
            <param name="model">Model of project for authorize on the site</param>
            <returns>Massege of Conditions for m_ResultMassage</returns>
        </member>
        <member name="M:TaskManager.Realizations.IManager.TaskStatusFin(System.Int32)">
            <summary>
            Finishing of task
            </summary>
            <param name="TaskFromFinish">ID of task</param>
        </member>
        <member name="M:TaskManager.Realizations.IManager.CommonUpdateStatus(System.Int32)">
            <summary>
            Auto-Updating all user's tasks that is updating statuses of the evrey task
            </summary>
        </member>
        <member name="M:TaskManager.Realizations.IManager.TaskOpen(System.Int32)">
            <summary>
            Opening of task on page or the other words review of task's Detail info 
            </summary>
            <param name="TaskId">ID of task</param>
            <returns>Set of property for Angular act</returns>
        </member>
        <member name="M:TaskManager.Realizations.IManager.TaskAdd(TaskManager.TASKS)">
            <summary>
            Adding a task into the data base
            </summary>
            <param name="model">Object of task who ready to add database</param>
            <returns>Result to m_ResultMassage in controller</returns>
        </member>
        <member name="M:TaskManager.Realizations.IManager.TaskChange(TaskManager.TASKS)">
            <summary>
            Changing of task
            </summary>
            <param name="model">Object of task who ready to change from database</param>
            <returns>Result to m_ResultMassage in controller</returns>
        </member>
        <member name="M:TaskManager.Realizations.IManager.TaskDelete(System.Int32)">
            <summary>
            Removing of task
            </summary>
            <param name="TaskId">Id of task</param>
        </member>
        <member name="M:TaskManager.Realizations.IManager.TaskSelect(System.Int32)">
            <summary>
            Getting of tasks' list
            </summary>
            <param name="CurId">Authoeized user</param>
            <returns>List of tasks for _PartialSelectionTasks.cshtml</returns>
        </member>
        <member name="M:TaskManager.Realizations.IManager.GettingTags(System.String)">
            <summary>
            Getting of Tags with inputed Keyword and angular service if such tag exists in DB
            </summary>
            <param name="TagKeyword">Key word from (text input of class="inputTag")</param>
            <returns>list of received tags</returns>
        </member>
        <member name="M:TaskManager.Realizations.IManager.CurrentUser(System.String)">
            <summary>
            Getting of User id
            </summary>
            <param name="SafetyLogin">WebSecurity.CurrentUserName</param>
            <returns>Object USER</returns>
        </member>
        <member name="F:TaskManager.Realizations.RealizeAccount.m_db">
            <summary>
            Instance EntitieDatabase is
            </summary>
        </member>
        <member name="F:TaskManager.Realizations.RealizeAccount.m_Alph">
            <summary>
            Varible contains mask of password's Crypting
            </summary>
        </member>
        <member name="F:TaskManager.Realizations.RealizeAccount.m_Key">
            <summary>
            Varible contains key of Crypting
            </summary>
        </member>
        <member name="M:TaskManager.Realizations.RealizeAccount.UserToDb(TaskManager.USERS)">
            <summary>
            Adding of User to DataBase
            </summary>
            <param name="Person">Object User</param>
            <returns>Massege of success for m_ResultMassage</returns>
        </member>
        <member name="M:TaskManager.Realizations.RealizeAccount.UserConfirm(System.String,System.String)">
            <summary>
            Confirming of user via own Email
            </summary>
            <param name="code">Crypt password from user's email</param>
            <param name="l">Login of User</param>
            <returns>Massege of success for m_ResultMassage</returns>
        </member>
        <member name="M:TaskManager.Realizations.RealizeAccount.UserAuthorisation(TaskManager.Models.LogIn)">
            <summary>
            Conditions are for failed attempt to authorize
            </summary>
            <param name="model">Model of project for authorize on the site</param>
            <returns>Massege of Conditions for m_ResultMassage</returns>
        </member>
        <member name="M:TaskManager.Realizations.RealizeAccount.SetLetter(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Forming and Sending of Email to confirm registred Account
            </summary>
            <param name="email">Inputed user's email</param>
            <param name="FIRST_NAME">Inputed user's first name</param>
            <param name="LAST_NAME">Inputed user's last name</param>
            <param name="resCrypt">Crypted user's pass</param>
            <param name="LOGIN">Inputed user's login</param>
            <param name="PASS">Inputed user's password</param>
        </member>
        <member name="F:TaskManager.Realizations.RealizeManager.m_db">
            <summary>
            Instance EntitieDatabase is
            </summary>
        </member>
        <member name="F:TaskManager.Realizations.RealizeManager.m_Connection">
            <summary>
            Varible is for sqlConnection() / connection to db
            </summary>
        </member>
        <member name="F:TaskManager.Realizations.RealizeManager.m_TASKSTATUS">
            <summary>
            Varible is for TASKSTATUS column in db
            </summary>
        </member>
        <member name="F:TaskManager.Realizations.RealizeManager.m_TASKID">
            <summary>
            Varible is for TASKID column in db
            </summary>
        </member>
        <member name="F:TaskManager.Realizations.RealizeManager.m_CountTag">
            <summary>
            Amount of string
            </summary>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.TaskStatusFin(System.Int32)">
            <summary>
            Finishing of task
            </summary>
            <param name="TaskFromFinish">ID of task</param>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.CommonUpdateStatus(System.Int32)">
            <summary>
            Auto-Updating all user's tasks that is updating statuses of the evrey task
            </summary>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.TaskOpen(System.Int32)">
            <summary>
            Opening of task on page or the other words review of task's Detail info 
            </summary>
            <param name="TaskId">ID of task</param>
            <returns>Set of property for Angular act</returns>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.TaskAdd(TaskManager.TASKS)">
            <summary>
            Adding a task into the data base
            </summary>
            <param name="model">Object of task who ready to add database</param>
            <returns>Result to m_ResultMassage in controller</returns>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.TaskChange(TaskManager.TASKS)">
            <summary>
            Changing of task
            </summary>
            <param name="model">Object of task who ready to change from database</param>
            <returns>Result to m_ResultMassage in controller</returns>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.TaskDelete(System.Int32)">
            <summary>
            Removing of task
            </summary>
            <param name="TaskId">Id of task</param>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.TaskSelect(System.Int32)">
            <summary>
            Getting of tasks' list
            </summary>
            <param name="CurId">Authoeized user</param>
            <returns>List of tasks for _PartialSelectionTasks.cshtml</returns>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.GettingTags(System.String)">
            <summary>
            Getting of Tags with inputed Keyword and angular service if such tag exists in DB
            </summary>
            <param name="TagKeyword">Key word from (text input of class="inputTag")</param>
            <returns>list of received tags</returns>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.CurrentUser(System.String)">
            <summary>
            Getting of User id
            </summary>
            <param name="SafetyLogin">WebSecurity.CurrentUserName</param>
            <returns>Object USER</returns>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.sqlConnection">
            <summary>
            Connecting to DataBase with ADO.NET F.
            </summary>
            <returns>SqlConnection m_Connection</returns>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.TagsAdd(System.String)">
            <summary>
            Adding of tags to DB or not
            </summary>
            <param name="TagRow">Got string from (text input of class="inputTag")</param>
            <returns>String of formed tags</returns>
        </member>
        <member name="M:TaskManager.Realizations.RealizeManager.FromingStatus(System.String)">
            <summary>
            Froming of Status
            </summary>
            <param name="Userdate">Own user of date from DataBase</param>
            <returns>Status of task</returns>
        </member>
    </members>
</doc>
